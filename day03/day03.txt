
1. GET방식
 1-1. 전송된 GET 파라미터 수신하기
   - URL의 내용(요청)을 수신하기 위한 request 내장 객체의 사용
	-> 전송된 파라미터를 처리하기 위한 인코딩 방식 설정하기

	requset.setCharacterEncoding("UTF-8");	  // 변수를 어떤 인코딩으로 받겠다
	-> 파라미터를 처리하기 위한 문자열 인코딩 방식을 설정한다.
	-> 이 기능은 파라미터를 수신하기 전에 1회만 수항한다.
	-> 일반적으로 모든 JSP 페이지에서 가장 처음에 호출한다.

   - 전송된 파라미터 수신하기

	String request.getParameter("파라미터이름");
	-> URL에 포함된 변수를 파라미터로 전달하여 해당 변수에 대한 값을
	리턴받으며, 리턴형은 항상 String 이다.
	-> 만약 숫자값을 사용해야 한다면 Integer.parsInt() 기능을 사용하여
	형변환 해야 한다.

  - 파라미터 전달과 수신
	-> 일반적으로 파라미터 수신 처리에서 변수명의 혼선을 피하기 위해
	파라미터 이름과 수신되는 값응ㄹ 저장하기 위한 변수명을
	동일하게 지정한다.

2. POST 방식
  2-1. GET 방식 데이터 전송의 한계
    - 모든 데이터가 URL에 노출되기 때문에 보안이 필요한 경우에는 사용할 수 없다.
    - URL의 총 길이가 1024byte로 제한되기 때문에 전달할 수 있는
    데이터의 양이 한정되어 있다.
 
  2-2. HTTP POST  방식
    - HTML의 FORM 요소를 통하여 데이터를 전달하는 방식으로 URL에
    데이터가 노출되지 않는다.
    - 데이터의 용량 제한이 없기 때문에 게시물의 본문과 같이 대용량의 데이터
    처리가 가능한다.
	-> 주로 게시물 작성, 회원 가입, 구매 정보 입력 등을 처리하기 위해
	사용된다.
    - 전송된 데이터를 수신하는 방법은 GET방식의 데이터 처리와 동일하다.

  2-3. <form> 요소를 통한 사용자의 입력값 전달하기
    - 사용자 입력값 전달하기 -> send.jsp
	-> <form> 태그의 method 속성에서 POST 방식임을 명시하고,
	action 속성에서 이력값을 전송받을 JSP 페이지를 지정한다.

    - 입력값 수신하기 -> ok.jsp
	-> <input> 태그의 name 속성값이 ok.jsp에게는 POST파라미터의
	이름이 된다.

3. HTML
  3-1. HTML 요소 선택자들
    - id		: 중복X, Javascript, CSS 를 위한 선택자(#)
    - class		: 중복O, Javascript, CSS 를 휘한 선택자(.)
    - name	: 데이터 전송의 용도

4. Javascript
   4-1. Javascript
     - HTML과 CSS는 정적인 언어입니다. 정적이라는 것은 이것들이 브라우저를
     통해서 웹페이지를 화면에 그려주는 화면들을 변경할 수 있는 방법이
     없다는 의미이다.
     - Javascript는 HTML, CSS로 만들어진 웹페이지를 동적으로 변경해주는
     언어입니다. 경고창을 띄우고, 탭인터페이스를 만들고, Drag&Drop 기능의
      웹 어플리케이션을 만들수 있는 것이다.

  4-2. Javascript에 영향을 준 언어
   - Java : 기본적인 문법
   - Scheme
   - Self

5. 서블릿(Servlet)
  5-1. Static pages(정적 페이지)
    - image, html, css, javascript 파일과 같이 컴퓨터에 저장되어 있는 파일들을
    의미한다.
    - 웹 서버에서 요청에 알맞은 파일을 반환하며, 항상 동일한 페이지를
    반환한다.(말 그대로 정적인 컨텐츠)
    - 웹 서버에서 제공한다.	

  5-2. Dynamic pages(동적 페이지)
    - 들어온 요청에 맞게 동적으로 만들어진 컨텐츠를 의미한다.
    - 데이터베이스, 서버 내 로직등을 활용해 만들어진 컨텐츠를 반환한다.
    - 웹 어플리케이션 서버에서 제공한다.
	











