
1. JSON
  1-1. 객체생성(JSONObject)
    - JSON은 맵 구조이기 때문에 key값과 value값이 쌍을 이뤄 저장된다.
    따라서 name이라는 key와 value가 한 쌍을 이뤄 저장된다.
    내부 JSON객체에는 요소들을 put(K,V)을 사용해서 넣어주고,
    외부 JSON객체에는 내부 JSON객체를 담고 하나로 묶어서 관리한다.
    따라서  JSON은 내부에서 외부 순서대로 데이터를 생성한다.

	{
		외부JSON요소이름:{
			내부JSON요소이름 : 요소값,
			내부JSON요소이름 : 요소값,
			...
		}
	}

  1-2. 객체 파싱(JSONParser)
    - JSON객체에 있는 정보를 가져오기 위해서는 파싱 작업이 필요하다.
    이 때 데이터가 잘못 불러질 수도 있기 때문에 예외처리를 해주어야 한다.
    생성시에는 내부에서 외부로 생성했다면, 불러올 때에는 외부에서 내부 순서대로
    접근해야 한다.

	JSONParset 파서객체 = new JSONParser();
	JSONObeject json객체 = (JSONObject)파서객체.parse("JSON형태의 문자열");

   1-3. JSON 데이터 춫출
     - JSON객체.get("키값") : Object타입
    Object타입을 알맞게 Casting을 해서 사용한다.

2. DBCP
  2-1. DBCP(DataBase Connection Pool)
   - 데이터베이스와 연결된 커넥션을 미리 만들어서 저정해두고 있다가 필요할 때
   저장된 공간(pool)에서 가져다 쓰고 반환하는 기법을 말한다. 커넥션 풀을 이용하면
   커넥션을 미리 만들어두고 사용하기 때문에 매번 사용자가 요청할 경우 
   드라이버를 로드하고, 커넥션 객체를 생성해 연결하고 종료하는 비효율적인
   작업을 하지 않아도 된다. 즉 데이터베이스의 부하를 줄일 수 있고 자원을 효율적으로
   관리할 수 있다.

3. JNDI(Java Naming and Directory Interface)
  3-1. JNDI란
   - 디렉토리 서비스에서 제공하는 데이터 및 객체를 발견(discover)하고 참고(lookup)
   하기 위한 자바 API.
   - 즉, DB Pool을 미리 Naming 시켜두는 방법(DB 연결방법 중 하나)
   - 우리가 저장해놓은 WAS의 데이터베이스 정보에 JNDI를 설정해 놓으면 
   웹 어플리케이션은 JNDI만 호출하면 간단해진다.

  3-2. 사용하는 이유
   - 개발을 한 사람과 실제 서비스를 운영하는 Admin은 다른 경우가 많기 때문에
   소스 레벨에서 설정되어 있는 것보다 WAS에서 설정되어 있는 것을 선호한다.
   또한 WAS에 여러 개의 웹 어플리케이션을 올려서 사용하기 때문에 WAS에서
   한 번에 설정해 주는 것이 자원낭비를 줄일 수 있습니다. 
   - 또한 장애가 나거나 성능이 정상적이지 못하면 다른 한 서버가 대신 일을 해줄 수 
   있습니다. 
   - 정리하자면 운영,관리,최적화 문제 대처에 다양한 이점이 있기 때문에 JNDI를 사용한다.

  3-3. 사용방법
   사용자 요청 > JNDI에 등록된 DB객체 검색 > 찾은 객체로부터 커넥션 획득
   > 사용 > DB작업 종료 후 커넥션 반납


4. MyBatis
  - 모델과 DB의 매개체
  - 객체 지향 언어인 자바의 관계형 데이터베이스 프로그래밍을 좀 더 쉽게 할 수 있게
  도와주는 개발 프레임 워크로서 JDBC를 통해 데이터베이스에 엑세스하는 작업을
  캡슐화하고 일반 SQL쿼리, 저장 프로시저 및 고급 매핑을 지원하며 모든 JDBC코드 및
  매개 변수의 중복 잡업을 제거 합니다.
  - MyBatis는 기존 JDBC 방식과 달리 SQL문을 XML파일에 작성함으로써 코드가 줄어들고
  SQL문만 따로 관리하기 때문에 수정이 편해진다.
  - ibatis 2.5버전이며, JDK 1.4이상
    MyBatis 3.0버전이며, JDK 1.5이상에서 지원
    ibatis, MyBatis의 차이점은 몇개의 문법 및 사용 용어(명칭)변경 등이 있다.

  4-1. MyBatis 설치
   - blog.mybatis.org/p/products.html

















