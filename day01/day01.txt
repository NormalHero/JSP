 JSP


1. 환경세팅
 - jdk 1.8
 - tomcat 8.5
 - Eclipse Photon

2. 인코딩
 - EUC-KR
	-> 완성형, 만들어져 있는 글자를 찾아옴
	"박" "민" "수"

 - UTF-8
	-> 조합형, 글자를 만들기 위한 요소들을 하나씩 찾아옴
	'ㅂ' 'ㅁ' 'ㅅ'

3. 이클립스 인코딩 설정
  - Window > Preferences > "enc" 검색 > Workspace, HTML, CSS, JSP, XML
  > 인코딩 UTF-8 로 설정

4. JSP
  4-1. 하나의 웹 사이트가 만들어지기 위해 필요한 요소들
    - 웹 퍼블리셔
	-> Front-End
	  - HTML : 페이지의 구조를 정의한다.
	  - CSS : 구조에 대한 디자인을 구성한다.
	  - JS : 동적 기능을 처리한다.

    - 웹 프로그래머
	-> Back-End
	  - 사용자가 입력한 내용을 Database에 저장하거나, 저장된
	  내용을 활용하여 페이지의 내용(HTML + CSS + JS)을 구성한다.
	  - PHP, JSP, ASP

	-> DataBase   
 	   - 회원정보, 게시물, 상품목록, 장바구니, 결제정보 등이 실제로
	   저장되는 영역.
 	   - Oracle, Tibero, MsSQL, MySQL, Mariadb, Postgresql, sqlite, H2

  4-2. JSP가 동작하기 위한 환경
   - Apache : 웹 서버 소프트웨어.
	     이 프로그램이 설치된 컴퓨터는 웹 브라우저를 통한 외부
	     접속이 가능하다.
	     외부로부터 접속이 이루어 지면, 아파치는 설정된 폴더 안에
	     존재하는 파일들을 웹 브라우저에게 전달한다.
    - Tomcat : *.jsp 확장자를 갖는 파일의 소스코드를 java 소스로 변환,
	     컴파일 한 후에 실행 결과를 웹 브라우저에게 전달하는
	     혁할을 하는 Apache의 확장팩.
	     서블릿 커너테이너라고 부르기도 한다.
    - Oracle : 데이터베이스 관리 시스템(DBMS : DataBase Management
  	     System).
	     사용자가 입력한 게물의 내용, 회원 정보 등이 저장되고,
	     그 내용을 JSP를 통해 사용자에게 제공한다.

  4-3. 생성된 프로젝트 폴더 구조
    - src : Java 소스코드가 저장되는 곳
    - WebContent : JSP 소스코드가 저장되는 곳.
		META-INF, WEB-INF 폴더는 제외되고
		이 곳의 파일들이 웹에 노출된다.
    - lib : *.jar 파일들이 저장되는 곳.

5. 구문 내용 확인
  5-1. 페이지 지시자

<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ page trimDirectiveWhitespaces="true" %>

   - <%@ page .... %> 의 형식, 주로 JSP 페이지의 가장 첫 라인에서 명시된다.
   - JSP 페이지의 각종 기본 설정을 명시하거나 Java 의 import 구문을 명시하는데
   사용한다.
   	-> language : 사용되는 프로그래밍 언어를 명시
	-> contentType : 결과물의 출력 형식을 지정
	-> pageEncoding : 페이지의 인코딩 형식을 지정
	-> trimDirectiveWhitespaces : <% ~ %> 블록 부분을 HTML 코드
	생성시 삭제 할지 여부 설정.

  5-2. 스크립트 릿 블록

<%
	String message_eng = "Hello JSP";
	String message_kor = "안녕하세요, 웹 프로그래밍";
	System.out.println( message_eng + " / " + message_kor );
%>

   - Java 소스코드가 작성되는 영역.
   - 이 영역은 일반 Java 소스가 main() 메서드와 같은 역할 한다.
   - 두 개 이상의 스크립트시 블록은 페이지 실행시에 하나로 병합되어 실행된다.
   - System.out.pirntln() 은 이클립스의 콘솔 영역에 내용을 출력하기 때문에
   이 기능의 결과는 사용자에게 표시되지 않는다.
	-> 개발자가 프로그래밍을 하면서 변수값의 변화를 디버깅 하기
	위한 용도로 사용된다.

  5-3. 출력문

	<% out.println(message_eng); %>

    - 웹 브라우저에 결과를 출력하는 기능을 한다.
    - 이 구문을 사용해 출력하는 값과 전체 HTML 구문이 병합되어 웹 
    브라우저에 표시됨을 이해해야 한다.

	<%=message_kor %>

     - out.prin(...) 는 위와 같이 단축 사용이 가능하다.

     - JSP페이지는 톰캣에 의해 Java 코드로 변환된다.
       톰캣이 실행되는 과정에서 <% ~ %> 블록 밖의 HTML 구문이 모두
       출력문으로 변환되어 Java 소스로 생성된다.

  5-4. 웹 환경의 이해
    - 인터넷 주소의 체계

	프로토콜		도메인		포트번호		폴더,파일명
	http://		localhost		:8080		/01-HelloJSP/HelloJSP.jsp
	http://		www.facebook.com	:80		/news/index.jsp

   	-> 프로토콜 : 통신 방식의 종류
		- http:// (웹), ftp:// (파일전송), telnet://(터미널 통신) 등 있다. 

	-> 도메인 : 특정 컴퓨터에 접속하기 위한 주소
		- 도메인은 WhoIS와 같은 도메인 등록기관을 통하여 일정 기간 동안
		사용료를 지불하고 임대해야 한다.
		- 'localhost'(127.0.0.1)는 모든 컴퓨터가 "자기 자신"을 가리키는 
		특수 도메인이다.

	-> 포트번호 : 특정 컴퓨터에 동신을 위해서 열려 있는 문.		
		- 모든 컴퓨터는 0 ~ 65535까지의 포트 번호를 가지고 있다. 
		- 이 포트 번호를 통해서 통신이 진행될 수 있으며 기본적으로 모든
		포트는 차단되어 있다.(포트를 차단하는 역할을 하는 프로그램 방화벽이다.)
		- 하나의 포트번호에는 단 하나의 프로그램만 연결될 수 있다.
		- 이미 다른 프로그램이 사용중이 포트번호를 사용하려고 할 경우,
		에러가 발생하게 된다.
		- 방화벽에 의해 차단되어 있는 포트를 사용하려고 할 경우
		윈도우는 사용자에게 포트번호 허용 여부를 물어보게 된다.
		- 웹 서버는 기본적으로 80번 포트를 사용한다.(http:// 의 기본 포트 번호)
		- Apache가 80번 포트를 사용하고 있는 경우, 웹 브라우저에서 도메인 뒤에
		명시하는 포트번호를 생략할 수 있다.
		- 톰캣은 8080번 기본 포트번호로 사용한다.

	-> 폴더, 파일명
		- 접속하려는 웹 서버(톰캣)에 설정된 Wrokspace 하위 경로를 의미한다.
		- 폴더나 파일 이름의 경로 구분은 "/"로 처리한다.
		- 만약 파일이름이 명시되지 않는다면, 웹 서버는 해당 폴더 안에 존재하는
		index.html, index.jsp 라는 이름을 갖는 파일의 실행 결과를
		브라우저에게 전달한다.

		ex) http://itpaper.co.kr 이라는 주소는 itpaper.co.kr 도메인에 연결된
		컴퓨터에 설치된 Apache가 자신의 Workspace에 위치한 index라는 이름의
		파일을 실행해서, 그 결과로 생성된 HTML 코드를 브라우저에게 
		전달하도록 요청한다.
		
  5-5. 웹 사이트 운영 조건
    - 서버(Server) : 외부 통신 요청에 대한 결과를 응답하는 소프트웨어. 서버는 외부의 다중
    접속에 대응하기 위하여 고사양의 하드웨어 요구한다.
    - Workstation : 서버를 구동하기 위한 목적으로 구성된 고사양의 컴퓨터
    - 서버 운영체제(Server OS) : Workstation에 설치될 목적으로 특수하게 만들어진
    운영체제(Linux, Window Server, Mac OS Sever 등이 있다.)
    - 즉, 웹 사이트를 운영하기 위해서는 서버 운영 체제가 설치된 Workstation에 APM 조합으로
    설치된 서버들이 24시간 내내 구동되어야 한다.




























